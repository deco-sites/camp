// DO NOT EDIT. This file is generated by deco.
// This file SHOULD be checked into source version control.
// This file is automatically updated during development when running `dev.ts`.

import { DecoManifest } from "$live/types.ts";
import * as $$$$0 from "./routes/index.tsx";
import * as $$$$1 from "./routes/_app.tsx";
import * as $$$$$0 from "./islands/InspectVSCode.tsx";
import * as $$$$$1 from "./islands/test2.tsx";
import * as $$$$$2 from "./islands/test.tsx";
import * as $$$$$$$$0 from "./sections/Head.tsx";
import * as $$$$$$$$1 from "./sections/GetStarted.tsx";
import * as $live_workflows from "$live/routes/live/workflows/run.ts";
import * as $live_middleware from "$live/routes/_middleware.ts";
import * as $live_workbench from "$live/routes/live/workbench.ts";
import * as $live_invoke from "$live/routes/live/invoke/index.ts";
import * as $live_invoke_key from "$live/routes/live/invoke/[...key].ts";
import * as $live_editorData from "$live/routes/live/editorData.ts";
import * as $live_inspect from "$live/routes/live/inspect/[...block].ts";
import * as $live_release from "$live/routes/live/release.ts";
import * as $live_meta from "$live/routes/live/_meta.ts";
import * as $live_previews_block from "$live/routes/live/previews/[...block].tsx";
import * as $live_previews_index from "$live/routes/live/previews/index.tsx";
import * as $live_catchall from "$live/routes/[...catchall].tsx";
import * as i1$0 from "$live/loaders/state.ts";
import * as i1$1 from "$live/loaders/workflows/events.ts";
import * as i1$2 from "$live/loaders/workflows/get.ts";
import * as i1$$0 from "$live/handlers/devPage.ts";
import * as i1$$1 from "$live/handlers/fresh.ts";
import * as i1$$2 from "$live/handlers/proxy.ts";
import * as i1$$3 from "$live/handlers/redirect.ts";
import * as i1$$4 from "$live/handlers/router.ts";
import * as i1$$5 from "$live/handlers/routesSelection.ts";
import * as i1$$6 from "$live/handlers/workflowRunner.ts";
import * as i1$$$0 from "$live/pages/LivePage.tsx";
import * as i1$$$$0 from "$live/sections/Conditional_Beta.tsx";
import * as i1$$$$1 from "$live/sections/EmptySection.tsx";
import * as i1$$$$2 from "$live/sections/PageInclude.tsx";
import * as i1$$$$3 from "$live/sections/Slot.tsx";
import * as i1$$$$4 from "$live/sections/UseSlot.tsx";
import * as i1$$$$$0 from "$live/matchers/MatchAlways.ts";
import * as i1$$$$$1 from "$live/matchers/MatchCron.ts";
import * as i1$$$$$2 from "$live/matchers/MatchDate.ts";
import * as i1$$$$$3 from "$live/matchers/MatchDevice.ts";
import * as i1$$$$$4 from "$live/matchers/MatchEnvironment.ts";
import * as i1$$$$$5 from "$live/matchers/MatchHost.ts";
import * as i1$$$$$6 from "$live/matchers/MatchLocation.ts";
import * as i1$$$$$7 from "$live/matchers/MatchMulti.ts";
import * as i1$$$$$8 from "$live/matchers/MatchRandom.ts";
import * as i1$$$$$9 from "$live/matchers/MatchSite.ts";
import * as i1$$$$$10 from "$live/matchers/MatchUserAgent.ts";
import * as i1$$$$$$0 from "$live/flags/audience.ts";
import * as i1$$$$$$1 from "$live/flags/everyone.ts";
import * as i1$$$$$$2 from "$live/flags/flag.ts";
import * as i1$$$$$$3 from "$live/flags/multivariate.ts";
import * as i1$$$$$$$0 from "$live/actions/workflows/cancel.ts";
import * as i1$$$$$$$1 from "$live/actions/workflows/signal.ts";
import * as i1$$$$$$$2 from "$live/actions/workflows/start.ts";

const manifest = {
  "routes": {
    "./routes/_app.tsx": $$$$1,
    "./routes/_middleware.ts": $live_middleware,
    "./routes/[...catchall].tsx": $live_catchall,
    "./routes/index.tsx": $$$$0,
    "./routes/live/_meta.ts": $live_meta,
    "./routes/live/editorData.ts": $live_editorData,
    "./routes/live/inspect/[...block].ts": $live_inspect,
    "./routes/live/invoke/[...key].ts": $live_invoke_key,
    "./routes/live/invoke/index.ts": $live_invoke,
    "./routes/live/previews/[...block].tsx": $live_previews_block,
    "./routes/live/previews/index.tsx": $live_previews_index,
    "./routes/live/release.ts": $live_release,
    "./routes/live/workbench.ts": $live_workbench,
    "./routes/live/workflows/run.ts": $live_workflows,
  },
  "islands": {
    "./islands/InspectVSCode.tsx": $$$$$0,
    "./islands/test.tsx": $$$$$2,
    "./islands/test2.tsx": $$$$$1,
  },
  "sections": {
    "$live/sections/Conditional_Beta.tsx": i1$$$$0,
    "$live/sections/EmptySection.tsx": i1$$$$1,
    "$live/sections/PageInclude.tsx": i1$$$$2,
    "$live/sections/Slot.tsx": i1$$$$3,
    "$live/sections/UseSlot.tsx": i1$$$$4,
    "deco-sites/camp/sections/GetStarted.tsx": $$$$$$$$1,
    "deco-sites/camp/sections/Head.tsx": $$$$$$$$0,
  },
  "loaders": {
    "$live/loaders/state.ts": i1$0,
    "$live/loaders/workflows/events.ts": i1$1,
    "$live/loaders/workflows/get.ts": i1$2,
  },
  "handlers": {
    "$live/handlers/devPage.ts": i1$$0,
    "$live/handlers/fresh.ts": i1$$1,
    "$live/handlers/proxy.ts": i1$$2,
    "$live/handlers/redirect.ts": i1$$3,
    "$live/handlers/router.ts": i1$$4,
    "$live/handlers/routesSelection.ts": i1$$5,
    "$live/handlers/workflowRunner.ts": i1$$6,
  },
  "pages": {
    "$live/pages/LivePage.tsx": i1$$$0,
  },
  "matchers": {
    "$live/matchers/MatchAlways.ts": i1$$$$$0,
    "$live/matchers/MatchCron.ts": i1$$$$$1,
    "$live/matchers/MatchDate.ts": i1$$$$$2,
    "$live/matchers/MatchDevice.ts": i1$$$$$3,
    "$live/matchers/MatchEnvironment.ts": i1$$$$$4,
    "$live/matchers/MatchHost.ts": i1$$$$$5,
    "$live/matchers/MatchLocation.ts": i1$$$$$6,
    "$live/matchers/MatchMulti.ts": i1$$$$$7,
    "$live/matchers/MatchRandom.ts": i1$$$$$8,
    "$live/matchers/MatchSite.ts": i1$$$$$9,
    "$live/matchers/MatchUserAgent.ts": i1$$$$$10,
  },
  "flags": {
    "$live/flags/audience.ts": i1$$$$$$0,
    "$live/flags/everyone.ts": i1$$$$$$1,
    "$live/flags/flag.ts": i1$$$$$$2,
    "$live/flags/multivariate.ts": i1$$$$$$3,
  },
  "actions": {
    "$live/actions/workflows/cancel.ts": i1$$$$$$$0,
    "$live/actions/workflows/signal.ts": i1$$$$$$$1,
    "$live/actions/workflows/start.ts": i1$$$$$$$2,
  },
  "baseUrl": import.meta.url,
};

export type Manifest = typeof manifest;

export default manifest satisfies DecoManifest;
